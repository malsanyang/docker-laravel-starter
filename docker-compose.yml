version: '3.9'
services:
  
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: malsanyang.com/php8.1
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - 8001:80
      - 4431:443
    volumes:
      - ./src:/var/www/html
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
      - db
      - redis
      - mailhog
      - kibana
    networks:
      - app-network

  #MySQL Service
  db:
    image: mariadb:10.7.8
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - 33061:3306
    environment:
      MYSQL_DATABASE: dev-db
      MYSQL_ROOT_PASSWORD: Admin@123
      MYSQL_USER: admin
      MYSQL_PASSWORD: Admin@123
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Redis Service
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    tty: true
    volumes:
      - redisData:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      retries: 3

  #Mailhog Service
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    tty: true
    ports:
      - 1125:1025
      - 8125:8025
    networks:
      - app-network

  #ElasticSearch Service
  elastic:
    image: elasticsearch:8.6.2
    container_name: elasticsearch
    volumes:
      - searchData:/usr/share/elasticsearch/data
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9201:9200
    networks:
      - app-network
  
  #Kabina Service
  kibana:
    image: kibana:8.6.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elastic
    ports:
      - 5602:5601
    networks:
    - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
    
#Volumes
volumes:
  dbdata:
    driver: local
  redisData:
    driver: local
  searchData:
    driver: local